<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:Brigitta.ViewModels"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Brigitta.Views.PrimaryDisplay"
        Title="Brigitta - Primary Display"
        Height="450"
        Width="800"
        MinHeight="450"
        MinWidth="800"
        WindowStartupLocation="CenterOwner">

    <Design.DataContext>
        <vm:PrimaryDisplayViewModel />
    </Design.DataContext>

    <Window.Styles>
        <Style Selector="Button.mp-command">
            <Setter Property="Width" Value="120" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
        </Style>
        <Style Selector="Button.mp-danger">
            <Setter Property="Background" Value="#e61919" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="400" />
        </Style>
        <Style Selector="Label.mp-header">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="{Binding Palette.FieldDefaultBorderBrush}" />
            <Setter Property="Margin" Value="0,0" />
            <Setter Property="FontSize" Value="18" />
        </Style>
        <Style Selector="Label.mp-team-red">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="{Binding Palette.TeamRedBackgroundBrush}" />
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <Style Selector="Label.mp-team-blue">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="{Binding Palette.TeamBlueBackgroundBrush}" />
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="10" />
        </Style>
        <Style Selector="Ellipse.mp-score-hollow-red">
            <Setter Property="Width" Value="17" />
            <Setter Property="Height" Value="17" />
            <Setter Property="Stroke" Value="{Binding Palette.TeamRedBackgroundBrush}" />
            <Setter Property="StrokeThickness" Value="3" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style Selector="Ellipse.mp-score-hollow-blue">
            <Setter Property="Width" Value="17" />
            <Setter Property="Height" Value="17" />
            <Setter Property="Stroke" Value="{Binding Palette.TeamBlueBackgroundBrush}" />
            <Setter Property="StrokeThickness" Value="3" />
            <Setter Property="Margin" Value="2,0" />
        </Style>
        <Style Selector="Ellipse.mp-score-filled">
            <Setter Property="Width" Value="17" />
            <Setter Property="Height" Value="17" />
            <Setter Property="Stroke" Value="{Binding Palette.ButtonCautionBrush}" />
            <Setter Property="Fill" Value="{Binding Palette.ButtonCautionBrush}" />
            <Setter Property="StrokeThickness" Value="3" />
            <Setter Property="Margin" Value="2,0" />
        </Style>
        <Style Selector="Label.mp-info-basic">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style Selector="Label.filter-label">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="80" />
        </Style>
        <Style Selector="ListBoxItem.player-listboxitem">
            <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="VerticalContentAlignment" Value="Bottom" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
        <Style Selector="TextBox.chat-feed">
            <Setter Property="FontFamily" Value="{DynamicResource ConsoleFont}" />
            <Setter Property="FontSize" Value="{Binding ChatFeedFontSize}" />
        </Style>
        <Style Selector="Button.ctrl-panel-small">
            <Setter Property="Width" Value="33" />
            <Setter Property="Height" Value="33" />
        </Style>
        <Style Selector="Button.ctrl-panel-large">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
        </Style>
        <Style Selector="Panel.ctrl-panel-btn-child">
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
        </Style>
        <Style Selector="Panel.ctrl-panel-btn-child-large">
            <Setter Property="Width" Value="34" />
            <Setter Property="Height" Value="34" />
        </Style>
        <Style Selector="StackPanel.ctrl-panel-row">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="Spacing" Value="8" />
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>
    </Window.Styles>

    <Border Background="{Binding Palette.DefaultBackgroundBrush}">
        <DockPanel>
            <!-- Top Menu -->
            <Menu DockPanel.Dock="Top" Background="#243d60" FontFamily="{DynamicResource BaseFont}">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save Chat..." HotKey="Ctrl+S" IsEnabled="False" />
                    <Separator />
                    <MenuItem Header="_Quit" IsEnabled="False" />
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="Increase Chat Font Size" HotKey="Ctrl++"
                              Command="{Binding IncreaseChatFeedFontSize}" />
                    <MenuItem Header="Decrease Chat Font Size" HotKey="Ctrl+-"
                              Command="{Binding DecreaseChatFeedFontSize}" />
                </MenuItem>
                <MenuItem Header="_Window">
                    <MenuItem Header="New Window" HotKey="Ctrl+N"
                              Command="{Binding SpawnNewWindow}" />
                </MenuItem>
                <MenuItem Header="Lobby Controls">
                    <MenuItem Header="_New Lobby..." HotKey="Ctrl+N" IsEnabled="False" />
                    <MenuItem Header="Lobby _Setup..." Command="{Binding LobbySetupWindow}" HotKey="Ctrl+O"
                              IsEnabled="False" />
                    <Separator />
                    <MenuItem Header="_Close Lobby" IsEnabled="False" />
                </MenuItem>
            </Menu>
            <Grid ColumnDefinitions="*,400" RowDefinitions="*">
                <Border Background="{Binding Palette.DarkBackgroundBrush}" Margin="10" CornerRadius="15">
                    <DockPanel>
                        <!-- <Grid DockPanel.Dock="Top"  -->
                        <!--     x:Name="MpInformationPanel" RowDefinitions="*,*,*" -->
                        <!--       ColumnDefinitions="*,*,*" Margin="10,0"> -->
                        <!--     <Label Grid.ColumnSpan="3" Classes="mp-header"> -->
                        <!--         OWC2022: (United States) vs (Germany) -->
                        <!--     </Label> -->
                        <!--     <Label Classes="mp-team-red" Grid.Row="1" Grid.Column="0" Padding="15,0"> -->
                        <!--         United States -->
                        <!--     </Label> -->
                        <!--     <Label Grid.Row="1" Grid.Column="1" Classes="mp-info-basic"> -->
                        <!--         Vs. -->
                        <!--     </Label> -->
                        <!--     <Label Classes="mp-team-blue" Grid.Row="1" Grid.Column="2" Padding="15,0"> -->
                        <!--         Germany -->
                        <!--     </Label> -->
                        <!--     ~1~ Score keeping @1@ -->
                        <!--     <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-red" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-red" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-red" /> -->
                        <!--     </StackPanel> -->
                        <!--     <StackPanel Orientation="Horizontal" -->
                        <!--                 Grid.Row="2" Grid.Column="2"> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-filled" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-blue" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-blue" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-blue" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-blue" /> -->
                        <!--         <Ellipse Classes="mp-score-hollow-blue" /> -->
                        <!--     </StackPanel> -->
                        <!--     <Label Classes="mp-info-basic" Grid.Row="2" Grid.Column="1">Bo13</Label> -->
                        <!-- </Grid> -->
                        <!-- -->
                        <!-- User input field -->
                        <Grid RowDefinitions="*" ColumnDefinitions="*,*,*,*,*,*,*,*,*,*,*,40" DockPanel.Dock="Bottom"
                              Margin="10,0,0,10">
                            <AutoCompleteBox
                                Grid.ColumnSpan="11"
                                FontFamily="{DynamicResource ConsoleFont}"
                                Watermark="Send a message..."
                                MinWidth="75"
                                MinHeight="20"
                                MaxHeight="40"
                                Margin="5,0"
                                CornerRadius="7"
                                Items="{Binding AutoCompletePhrases}"
                                KeyDown="TextInput_KeyDown" />
                            <Button Grid.Column="11"
                                    Background="{Binding Palette.ButtonSubmitBrush}" Content="+"
                                    Command="{Binding AddTabCommand}" />
                        </Grid>

                        <!-- Console / incoming chat field -->
                        <TextBox
                            x:Name="ChatBox"
                            Margin="10"
                            CornerRadius="10"
                            Text="{Binding CurrentChatDisplay}"
                            Watermark="{Binding CurrentChatWatermark}"
                            Classes="chat-feed"
                            MinWidth="360"
                            IsReadOnly="True"
                            Focusable="True"
                            CaretBrush="Black"
                            TextWrapping="Wrap"
                            CaretIndex="{Binding ChatFeedCaretIndex, Mode=OneWay}" />
                    </DockPanel>
                </Border>

                <Border Grid.Column="1" Background="{Binding Palette.DarkBackgroundBrush}" CornerRadius="15"
                        Margin="10">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <Label Classes="mp-header" HorizontalAlignment="Center" Margin="0,10,0,-10">Control Panel</Label>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Classes="ctrl-panel-row">
                                <Button Classes="ctrl-panel-small" Command="{Binding DispatchStandardTimer}"
                                        ToolTip.Tip="Starts a 60 second timer.">
                                    <Button.CommandParameter>
                                        <system:Int32>60</system:Int32>
                                    </Button.CommandParameter>
                                    <Panel Classes="ctrl-panel-btn-child">
                                        <Image Source="../Assets/Icons/time-forward-60.png" />
                                    </Panel>
                                </Button>
                                <Button Classes="ctrl-panel-small" Command="{Binding DispatchStandardTimer}"
                                        ToolTip.Tip="Starts a 90 second timer.">
                                    <Button.CommandParameter>
                                        <system:Int32>90</system:Int32>
                                    </Button.CommandParameter>
                                    <Panel Classes="ctrl-panel-btn-child">
                                        <Image Source="../Assets/Icons/time-forward-90.png" />
                                    </Panel>
                                </Button>
                                <Button Classes="ctrl-panel-small" Command="{Binding DispatchStandardTimer}"
                                        ToolTip.Tip="Starts a 120 second timer.">
                                    <Button.CommandParameter>
                                        <system:Int32>120</system:Int32>
                                    </Button.CommandParameter>
                                    <Panel Classes="ctrl-panel-btn-child">
                                        <Image Source="../Assets/Icons/time-forward-120.png" />
                                    </Panel>
                                </Button>
                                <Panel Margin="3" />
                                <Button Classes="ctrl-panel-small" Command="{Binding DispatchMatchTimer}"
                                        ToolTip.Tip="Queues the match to start in 5 seconds.">
                                    <Button.CommandParameter>
                                        <system:Int32>5</system:Int32>
                                    </Button.CommandParameter>
                                    <Panel Classes="ctrl-panel-btn-child">
                                        <Image Source="../Assets/Icons/time-forward-5-red.png" />
                                    </Panel>
                                </Button>
                                <Button Classes="ctrl-panel-small" Command="{Binding DispatchMatchTimer}"
                                        ToolTip.Tip="Queues the match to start in 10 seconds.">
                                    <Button.CommandParameter>
                                        <system:Int32>10</system:Int32>
                                    </Button.CommandParameter>
                                    <Panel Classes="ctrl-panel-btn-child">
                                        <Image Source="../Assets/Icons/time-forward-10-red.png" />
                                    </Panel>
                                </Button>
                            </StackPanel>
                            <StackPanel Classes="ctrl-panel-row" Margin="0">
                                <Button Classes="ctrl-panel-large" Command="{Binding DispatchLock}"
                                        ToolTip.Tip="Locks the lobby.">
                                    <Panel Classes="ctrl-panel-btn-child-large">
                                        <Image Source="../Assets/Icons/lock.png" />
                                    </Panel>
                                </Button>
                                <Button Classes="ctrl-panel-large" Command="{Binding DispatchUnlock}"
                                        ToolTip.Tip="Unlocks the lobby.">
                                    <Panel Classes="ctrl-panel-btn-child-large">
                                        <Image Source="../Assets/Icons/unlock.png" />
                                    </Panel>
                                </Button>
                                <Panel Margin="5" />
                                <Button Classes="ctrl-panel-large" Command="{Binding DispatchAbortTimer}"
                                        ToolTip.Tip="Aborts any ongoing timers by sending an !mp aborttimer command.">
                                    <Panel Classes="ctrl-panel-btn-child-large">
                                        <Image Source="../Assets/Icons/abort-timer.png" />
                                    </Panel>
                                </Button>
                                <Button Classes="ctrl-panel-large" Command="{Binding DispatchMatchAbort}"
                                        ToolTip.Tip="Aborts the match by sending an !mp abort command.">
                                    <Panel Classes="ctrl-panel-btn-child-large">
                                        <Image Source="../Assets/Icons/abort-match.png" />
                                    </Panel>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                        <Grid ColumnDefinitions="200,200" RowDefinitions="*" Margin="30,30">
                            <StackPanel Grid.Column="0" Orientation="Vertical">
                                <Label Classes="mp-header" Margin="35,-5">Chat</Label>
                                <CheckBox IsChecked="{Binding AutoScrollEnabled, Mode=OneWay}" HotKey="Ctrl+D"
                                          Command="{Binding ToggleAutoScroll}"
                                          ToolTip.Tip="Whether the chatbox should scroll to the bottom whenever new text is received. The chatbox will always scroll to bottom when you type a message.">
                                    Auto Scroll
                                </CheckBox>
                                <ScrollViewer HorizontalAlignment="Left">
                                    <ListBox Items="{Binding Channels}"
                                             Selection="{Binding ChatTabSelectionModel}"
                                             FontFamily="{DynamicResource BaseFont}"
                                             CornerRadius="5"
                                             MaxHeight="160"
                                             Width="145">
                                    </ListBox>
                                </ScrollViewer>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </DockPanel>
    </Border>
</Window>